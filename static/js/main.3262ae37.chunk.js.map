{"version":3,"sources":["components/AddUser.js","components/EditUser.js","components/ItemUser.js","components/ListUser.js","components/Customer.js","App.js","index.js"],"names":["AddUser","onAdd","nameRef","useRef","useState","name","addr","userInput","setUserInput","changeInput","e","target","value","onSubmit","preventDefault","current","focus","type","onChange","ref","EditUser","onUpdate","setIsEdit","data","setData","id","useEffect","className","onClick","ItemUser","onRemove","onModify","ListUser","map","Customer","isEdit","setCurrent","updata","filter","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3262ae37.chunk.js","sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport './adduser.css';\r\nimport { GoPlus } from \"react-icons/go\";\r\n\r\nconst AddUser = ({onAdd}) => {\r\n    const nameRef = useRef()\r\n    const [ userInput, setUserInput ] = useState({\r\n        name:'', addr:''\r\n    })\r\n    const { name, addr } = userInput\r\n\r\n    const changeInput = (e) => {\r\n        const { value, name } = e.target\r\n        setUserInput({\r\n            ...userInput,\r\n            [name]:value\r\n        })\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        //input에 공백일 경우 데이터가 추가되지 않음\r\n        if( !name || !addr ) return\r\n        // 데이터추가\r\n        onAdd(userInput)\r\n        // 입력폼초기화\r\n        setUserInput({\r\n            name:'', addr:''\r\n        })\r\n        // 첫번째 input에 초기화\r\n        nameRef.current.focus()\r\n    }\r\n\r\n\r\n    return (\r\n        <form onSubmit={onSubmit}>\r\n            <h2>고객명단 추가</h2>\r\n            <p>\r\n                <label>이름</label>\r\n                <input type=\"text\" value={name} name=\"name\" onChange={changeInput} ref={nameRef} />\r\n            </p>\r\n            <p>\r\n                <label>주소</label>\r\n                <input type=\"text\" value={addr} name=\"addr\" onChange={changeInput} />\r\n            </p>\r\n            <p>\r\n                <button type=\"submit\"><GoPlus /></button>\r\n            </p>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default AddUser;","import React, { useEffect, useState } from 'react';\r\nimport './edituser.css';\r\nimport { FaSave } from \"react-icons/fa\";\r\nimport { ImCancelCircle } from \"react-icons/im\";\r\n\r\nconst EditUser = ({ current, onUpdate, setIsEdit }) => {\r\n    const [ data, setData ] = useState(current)\r\n    const { id, name, addr } = data\r\n\r\n    const changeInput = (e) => {\r\n        const { value, name } = e.target\r\n        setData({\r\n            ...data,\r\n            [name]:value\r\n        })\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        //id는 번호 비교, data는 내용 전체를 갱신\r\n        onUpdate(id, data)\r\n        setData({\r\n            name:'',addr:''\r\n        })   \r\n    }\r\n\r\n    useEffect(() => {\r\n        setData(current)\r\n    },[current])\r\n\r\n    return (\r\n        <form className=\"clearfix\">\r\n            <h2>고객명단 수정</h2>\r\n            <p>\r\n                <label>이름</label>\r\n                <input type=\"text\" value={name} name=\"name\" onChange={changeInput} />\r\n            </p>\r\n            <p>\r\n                <label>주소</label>\r\n                <input type=\"text\" value={addr} name=\"addr\" onChange={changeInput} />\r\n            </p>\r\n            <p>\r\n                <button className=\"editBtn\" onClick={onSubmit}> <FaSave /></button>\r\n                <button className=\"canBtn\" onClick={ () => setIsEdit(false)}> <ImCancelCircle/> </button>\r\n            </p>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default EditUser;","import React from 'react';\r\nimport { AiOutlineDelete } from \"react-icons/ai\";\r\nimport { BiEditAlt } from \"react-icons/bi\";\r\n\r\nconst ItemUser = ({ data, onRemove, onModify }) => {\r\n    const { id, name, addr } = data\r\n    return (\r\n        <tr>\r\n            <td>{ name }</td>\r\n            <td>{ addr }</td>\r\n            <td>\r\n                <button className=\"editBtn\" onClick={()=>onModify(data)}><BiEditAlt/></button>\r\n                <button className=\"delBtn\" onClick={() => onRemove(id) }><AiOutlineDelete /></button>\r\n            </td>\r\n        </tr>\r\n    );\r\n};\r\n\r\nexport default ItemUser;","import React from 'react';\r\nimport ItemUser from './ItemUser';\r\n\r\nconst ListUser = ({data, onRemove, onModify}) => {\r\n    return (\r\n        <div>\r\n            <h2 className=\"users\">고객리스트</h2>\r\n            <table>\r\n                <colgroup>\r\n                    <col className=\"name\" />\r\n                    <col className=\"addr\" />\r\n                    <col className=\"admin\" />\r\n                </colgroup>\r\n                <thead>\r\n                    <tr>\r\n                        <th>이름</th>\r\n                        <th>주소</th>\r\n                        <th>관리</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        data.map( data => <ItemUser key={data.id} data={data} onRemove={onRemove} onModify={onModify} />)\r\n                    }\r\n                    \r\n                </tbody>\r\n            </table>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ListUser;","import React, { useRef, useState } from 'react';\r\nimport '../utils/css/reset.css'\r\nimport AddUser from './AddUser';\r\nimport EditUser from './EditUser';\r\nimport ListUser from './ListUser';\r\n\r\nconst Customer = () => {\r\n    const id = useRef(1)\r\n    const [ data , setData ] = useState([])\r\n     // 데이터 수정\r\n    const [ isEdit, setIsEdit ] = useState(false)\r\n    // 데이터 하나 값만 받아올 공간\r\n    const [ current, setCurrent ] = useState({})\r\n\r\n    // 수정버튼 눌렀을 때 환경 바꾸기\r\n    const onModify = ( data ) => {\r\n        setIsEdit(true)\r\n        setCurrent( data )\r\n    }\r\n    const onUpdate = (id, updata) => {\r\n        setData( data.map(data => data.id === id ? updata:data ))\r\n        setIsEdit(false)\r\n    }\r\n    \r\n    // 데이터 추가\r\n    const onAdd = (userInput) => {\r\n        userInput.id = id.current++\r\n        setData([\r\n            ...data,\r\n            userInput\r\n        ])\r\n    }\r\n    // 데이터 삭제\r\n    const onRemove = (id) => {\r\n        setData(data.filter(data => data.id !== id))\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className=\"Customer\">\r\n            { \r\n                isEdit ? \r\n                <EditUser current={current} onUpdate={onUpdate} setIsEdit={setIsEdit} /> : <AddUser onAdd={onAdd}  /> \r\n            }\r\n\r\n            <ListUser data={data} onRemove={onRemove} onModify={onModify} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Customer;","import React from 'react';\nimport Customer from './components/Customer';\n\nconst App = () => {\n  return (\n    <div>\n      <Customer />\n    </div>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}